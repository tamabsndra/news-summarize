version: '3.8'

services:
  # News Summarizer API
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - API_KEY=${API_KEY:-your-secure-api-key-here}
      - RATE_LIMIT_REQUESTS=${RATE_LIMIT_REQUESTS:-5/minute}
      - RATE_LIMIT_BURST=${RATE_LIMIT_BURST:-10/hour}
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      - redis
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data:

# For development environment
# Use: docker-compose up
# For production with nginx
# Use: docker-compose --profile production up
